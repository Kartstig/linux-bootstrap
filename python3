#!/bin/bash

red="\033[31m"
yellow="\033[33m"
green="\033[32m"
endColor="\033[97m"
check="✔"
cross="✘"

if [ ! -z "$PYTHON_VERSION" ];
then
  PYTHON_VERSION='3.6.8'
fi

PYTHON='python3.6'
PYTHON_SRC='python-src'
PYTHON_ZIP="Python-$PYTHON_VERSION.tgz"
PYTHON_PATH="/usr/local/bin/$PYTHON"

set -e

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# LINUX DEPENDENCIES

apt-get update

apt-get install -y \
  build-essential \
  git \
  gnome-schedule \
  libc6-dev \
  libncursesw5-dev \
  libreadline-gplv2-dev \
  libssl-dev \
  libgdbm-dev \
  libsqlite3-dev \
  libbz2-dev \
  python \
  python-dev \
  python-pip \
  python3 \
  python3-dev \
  python3-pip \
  tk-dev \
  vim

# VIRTUALENV

pip install virtualenv

# COMPILE PYTHON
export LDFLAGS="-L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/openssl/include"
echo -en "\t${yellow}Installing Python Version:\t${green}$PYTHON_VERSION${endColor}\n"
if [ -d "$PYTHON_SRC" ]; then
	echo -en "\t${yellow}Removing old Python source files:\t${endColor}"
	OUT=$(rm -rf $PYTHON_SRC)
	echo -en "\r\t${yellow}Removing old Python source files:\t${green}${check}${endColor}\n"
fi
echo -en "\t${yellow}Downloading $PYTHON_ZIP:${endColor}\r"
OUT=$(curl -L -O "https://www.python.org/ftp/python/$PYTHON_VERSION/$PYTHON_ZIP" 2>&1 > /dev/null)
if [ $? -gt 0 ]; then
	echo -en "\r\t${yellow}Downloading $PYTHON_ZIP:\t${red}${cross}${endColor}\n"
	echo -e "${red}$OUT${endColor}"
	exit 1
else
	echo -en "\r\t${yellow}Downloading $PYTHON_ZIP:\t${green}${check}${endColor}\n"
fi

echo -en "\t${yellow}Unpacking $PYTHON_ZIP:${endColor}"
OUT=$(mkdir $PYTHON_SRC && \
	tar -xvzf "$PYTHON_ZIP" -C $PYTHON_SRC --strip-components 1 2>&1 > /dev/null)
if [ $? -gt 0 ]; then
	exit 0
	echo -en "\r\t${yellow}Unpacking $PYTHON_ZIP:\t${red}${cross}${endColor}\n"
	echo -e "${red}$OUT${endColor}"
	exit 1
else
	echo -en "\r\t${yellow}Unpacking $PYTHON_ZIP:\t${green}${check}${endColor}\n"
fi

echo -en "\t${yellow}Compiling Python$PYTHON_VERSION:${endColor}\r"
OUT=$(cd $PYTHON_SRC 2>&1 > /dev/null && \
	./configure --enable-optimizations 2>&1 > /dev/null && \
  make -j4 && \
	sudo make install 2>&1 > /dev/null && \
	cd $ROOT_DIR 2>&1 > /dev/null)
if [ $? -gt 0 ]; then
	echo -en "\r\t${yellow}Compiling Python$PYTHON_VERSION:\t${red}${cross}${endColor}\n"
	echo -e "${red}$OUT${endColor}"
	exit 1
else
	echo -en "\r\t${yellow}Compiling Python$PYTHON_VERSION:\t${green}${check}${endColor}\n"
fi

